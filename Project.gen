<?xml version="1.0" encoding="UTF-8"?>
<FslBuildGenProjectRoot Version="1">
  <Project Name="DemoFramework" Version="5.4.0" DefaultTemplate="DF" DefaultPackageLanguage="C++" DefaultCompany="NXP" RequirePackageCreationYear="true" ToolConfigFile=".Config/FslBuildGen.xml">
    <!-- Add a base package that all other packages dependent on -->
    <AddBasePackage Name="Platform"/>
    <AddRootDirectory Name="$(FSL_GRAPHICS_SDK)"/>
    <AddRootDirectory Name="$(FSL_GRAPHICS_SDK_THIRD_PARTY_LIBS_DIR)" Create="true"/>
    <PackageConfiguration Name="default">
      <!-- ThirdParty -->
      <PackageLocation Name="$(FSL_GRAPHICS_SDK)/ThirdParty"/>
      <!-- Framework packages -->
      <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoFramework"/>
      <!-- App packages -->
      <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps"/>
    </PackageConfiguration>
    <PackageConfiguration Name="sdk" Preload="true">
      <!-- ThirdParty -->
      <PackageLocation Name="$(FSL_GRAPHICS_SDK)/ThirdParty"/>
      <!-- Framework packages -->
      <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoFramework" ScanMethod="AllSubDirectories"/>
      <!-- App packages -->
      <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps" ScanMethod="AllSubDirectories"/>
    </PackageConfiguration>
    <BuildDocConfiguration>
      <Requirement Name="GoogleUnitTest" Skip="true"/>
    </BuildDocConfiguration>
    <CMakeConfiguration DefaultBuildDir="${TopProjectRoot}/build" MinVersion="3.10.2">
      <Platform Name="Ubuntu" DefaultGeneratorName="Unix Makefiles"/>
      <!-- For now we rely on FslBuild to select the default generator based on CompilerConfiguration from this file, as that was the old way to do it instead of using 
           DefaultGeneratorName="Visual Studio 15 2017 Win64"-->
      <Platform Name="Windows"/>
      <Platform Name="Yocto" DefaultGeneratorName="Unix Makefiles"/>
    </CMakeConfiguration>
    <ClangFormatConfiguration FileExtensions=".cpp;.hpp;.frag;.geom;.tesc;.tese;.vert" Recipe="Recipe.BuildTool.clang_format"/>
    <ClangTidyConfiguration FileExtensions=".cpp;.hpp" Recipe="Recipe.BuildTool.clang_tidy">
      <Platform Name="All">
        <Compiler Flags="-Wall;-Wno-invalid-token-paste;-Wno-unknown-pragmas;-Wno-unused-variable;-Wno-unused-value"/>
        <StrictChecks>
          clang-analyzer-core.*
          clang-analyzer-cplusplus.*
          bugprone-assert-side-effect
          bugprone-misplaced-widening-cast
          bugprone-parent-virtual-call 
          bugprone-suspicious-semicolon
          bugprone-suspicious-string-compare
          bugprone-terminating-continue
          bugprone-throw-keyword-missing
          bugprone-undelegated-constructor
          bugprone-use-after-move
          cppcoreguidelines-c-copy-assignment-signature
          cppcoreguidelines-narrowing-conversions
          cppcoreguidelines-pro-type-member-init
          cppcoreguidelines-slicing
          google-global-names-in-headers
          misc-definitions-in-headers
          misc-non-copyable-objects
          misc-unused-using-decls
          modernize-redundant-void-arg
          modernize-replace-auto-ptr
          modernize-use-bool-literals
          modernize-use-default-member-init
          modernize-use-uncaught-exceptions
          performance-unnecessary-value-param
          readability-named-parameter
          readability-non-const-parameter
          readability-redundant-control-flow
          readability-redundant-declaration
          readability-simplify-subscript-expr
          readability-static-definition-in-anonymous-namespace
        </StrictChecks>
      </Platform>
      <Platform Name="Android">
        <Compiler Flags="-std=c++14"/>
      </Platform>
      <Platform Name="Ubuntu">
        <Compiler Flags="-std=c++14"/>
        <Defines All="FSL_PLATFORM_UBUNTU;PIC" Debug="DEBUG" Release="NDEBUG"/>
      </Platform>
      <Platform Name="Windows">
        <!-- We use C++14 as it's required for VS2017 -->
        <Compiler Flags="-std=c++14;-Wmicrosoft;-fms-compatibility"/>
        <Defines All="_UNICODE;UNICODE;NOMINMAX;VC_EXTRALEAN;WIN32_LEAN_AND_MEAN;WIN32;_CONSOLE" Debug="_DEBUG" Release="NDEBUG"/>
      </Platform>
      <Platform Name="Yocto">
        <Compiler Flags="-std=c++14;-I$(ROOTFS)/usr/include"/>
        <Defines All="FSL_PLATFORM_YOCTO;PIC;LINUX" Debug="DEBUG;_DEBUG" Release="NDEBUG"/>
      </Platform>
    </ClangTidyConfiguration>
    <CompilerConfiguration Name="VisualStudio" Platform="Windows" DefaultVersion="2017"/>
    <Experimental AllowDownloads="true" DisableDownloadEnv="FSL_GRAPHICS_SDK_THIRD_PARTY_LIBS_DISABLE_DOWNLOAD">
      <!-- Define the name of the default third party installation directory. -->
      <!-- This will be the directory where we install/build any thirdparty source that is needed -->
      <DefaultThirdPartyInstallDirectory Name="$(FSL_GRAPHICS_SDK_THIRD_PARTY_LIBS_DIR)"/>
      <DefaultThirdPartyInstallReadonlyCacheDirectory Name="$(FSL_GRAPHICS_SDK_THIRD_PARTY_LIBS_READONLY_CACHE_DIR)"/>
      <!--Android NDKToolchain="clang" StlType="c++_shared"/-->
      <Platform Name="Yocto">
        <Recipes.DefaultValue Value=""/>
      </Platform>
    </Experimental>
  </Project>
</FslBuildGenProjectRoot>
