<?xml version="1.0" encoding="utf-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>
      Describes the Fsl.gen format
    </xs:documentation>
  </xs:annotation>

  <xs:simpleType name="_TP_FeatureName">
    <xs:restriction base="xs:string">
      <xs:enumeration value="EarlyAccess" />
      <xs:enumeration value="EGL" />
      <xs:enumeration value="G2D" />
      <xs:enumeration value="OpenCL" />
      <xs:enumeration value="OpenCL1.1" />
      <xs:enumeration value="OpenCL1.2" />
      <xs:enumeration value="OpenCV" />
      <xs:enumeration value="OpenCV3" />
      <xs:enumeration value="OpenGLES2" />
      <xs:enumeration value="OpenGLES3" />
      <xs:enumeration value="OpenGLES3.1" />
      <xs:enumeration value="OpenGLES3.2" />
      <xs:enumeration value="OpenVG" />
      <xs:enumeration value="OpenVX" />
      <xs:enumeration value="OpenVX1.0.1" />
      <xs:enumeration value="OpenVX1.1" />
      <xs:enumeration value="Vulkan" />
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="_TP_DependencyAccess">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Public" />
      <xs:enumeration value="Private" />
      <xs:enumeration value="Link" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="_TP_Access">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Public" />
      <xs:enumeration value="Private" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="_TP_Bool">
    <xs:restriction base="xs:string">
      <xs:enumeration value="true" />
      <xs:enumeration value="false" />
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="_TP_ExternalDependencyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="StaticLib" />
      <xs:enumeration value="DLL" />
      <xs:enumeration value="Headers" />
      <xs:enumeration value="Find" />
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="_TP_VariantType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Normal" />
      <xs:enumeration value="Virtual" />
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="_TP_BuildOptimization">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Disabled" />
      <xs:enumeration value="Default" />
      <xs:enumeration value="Full" />
    </xs:restriction>
  </xs:simpleType>


  <xs:complexType name="_T_UsesFeature">
    <xs:annotation>
      <xs:documentation>Specifies a requirement for the given feature name to exist</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="_TP_FeatureName" use="required"/>
  </xs:complexType>


  <xs:complexType name="_T_Requirement">
    <xs:annotation>
      <xs:documentation>Specifies a requirement for the given capability</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Type" type="xs:string" use="required"/>
    <xs:attribute name="Extends" type="xs:string" use="optional"/>
    <xs:attribute name="Version" type="xs:string" use="optional"/>
  </xs:complexType>


  <xs:complexType name="_T_ImportTemplate">
    <xs:annotation>
      <xs:documentation>Specifies the name of a template that should be imported from one of the import directories</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
  </xs:complexType>


  <xs:complexType name="_T_Dependency">
    <xs:annotation>
      <xs:documentation>Specifies a direct dependency on the named package</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Flavor" type="xs:string" use="optional"/>
    <xs:attribute name="Access" type="_TP_DependencyAccess" use="optional"/>
    <xs:attribute name="If" type="xs:string" use="optional"/>
  </xs:complexType>


  <xs:complexType name="_T_ExternalDependency">
    <xs:annotation>
      <xs:documentation>Specifies a direct dependency to something external. If this dependency is used a lot consider creating a ExternalLibrary package for it instead.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="DebugName" type="xs:string" use="optional"/>
    <xs:attribute name="Include" type="xs:string" use="optional"/>
    <xs:attribute name="Location" type="xs:string" use="optional"/>
    <xs:attribute name="Access" type="_TP_Access" use="optional"/>
    <xs:attribute name="Type" type="_TP_ExternalDependencyType" use="required"/>
    <xs:attribute name="Version" type="xs:string" use="optional"/>
    <xs:attribute name="If" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_FindPackage">
    <xs:annotation>
      <xs:documentation>Specifies a dependency to something external, should preferably be used in ExternalLibrary packages.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Version" type="xs:string" use="optional"/>
    <xs:attribute name="TargetName" type="xs:string" use="optional"/>
    <xs:attribute name="Path" type="xs:string" use="optional"/>
    <xs:attribute name="If" type="xs:string" use="optional"/>
  </xs:complexType>


  <xs:complexType name="_T_Define">
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Access" type="_TP_Access" use="required"/>
  </xs:complexType>


  <xs:complexType name="_T_Platform">
    <xs:annotation>
      <xs:documentation>Platform specific configuration</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_PlatformCommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="ProjectId" type="xs:string" use="optional"/>
    <xs:attribute name="Supported" type="_TP_Bool" use="optional"/>
  </xs:complexType>


  <xs:complexType name="_T_BuildCustomization.Debug.Optimization">
    <xs:annotation>
      <xs:documentation>Custom build configurations</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Value" type="_TP_BuildOptimization" use="required"/>
  </xs:complexType>


  <xs:complexType name="_T_Default.Platform.Supported">
    <xs:annotation>
      <xs:documentation>Override the default values for platform attributes</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Value" type="_TP_Bool" use="required"/>
  </xs:complexType>

  <xs:complexType name="_T_Flavor">
    <xs:annotation>
      <xs:documentation>Adds a flavor of this package. The flavor influces all users of it, so be careful when using it</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_FlavorCommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="_T_Variant">
    <xs:annotation>
      <xs:documentation>Adds a variant of this package. The variant is inherited by everyone that is dependent on this package, so be careful with them</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_VariantCommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Extend" type="_TP_Bool" use="optional"/>
    <xs:attribute name="Type" type="_TP_VariantType" use="optional"/>
  </xs:complexType>


  <xs:complexType name="_T_FlavorOption">
    <xs:group ref="_G_FlavorOptionCommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="_T_VariantOption">
    <xs:group ref="_G_VariantOptionCommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
  </xs:complexType>



  <xs:group name="_G_UsesFeatureElement">
    <xs:choice>
      <xs:element name="UsesFeature" type="_T_UsesFeature"/>
      <xs:element name="Requirement" type="_T_Requirement"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_ImportTemplate">
    <xs:choice>
      <xs:element name="ImportTemplate" type="_T_ImportTemplate"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_DependencyElement">
    <xs:choice>
      <xs:element name="Dependency" type="_T_Dependency"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_ExternalDependencyElement">
    <xs:choice>
      <xs:element name="ExternalDependency" type="_T_ExternalDependency"/>
    </xs:choice>
  </xs:group>

  <xs:group name="_G_FindPackageElement">
    <xs:choice>
      <xs:element name="FindPackage" type="_T_FindPackage"/>
    </xs:choice>
  </xs:group>

  <xs:group name="_G_DefineElement">
    <xs:choice>
      <xs:element name="Define" type="_T_Define"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_PlatformElement">
    <xs:choice>
      <xs:element name="Platform" type="_T_Platform"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_BuildCustomizationElements">
    <xs:choice>
      <xs:element name="BuildCustomization.Debug.Optimization" type="_T_BuildCustomization.Debug.Optimization"/>
    </xs:choice>
  </xs:group>

  <xs:group name="_G_DefaultElements">
    <xs:choice>
      <xs:element name="Default.Platform.Supported" type="_T_Default.Platform.Supported"/>
    </xs:choice>
  </xs:group>

  <xs:group name="_G_FlavorElement">
    <xs:choice>
      <xs:element name="Flavor" type="_T_Flavor"/>
    </xs:choice>
  </xs:group>

  <xs:group name="_G_VariantElement">
    <xs:choice>
      <xs:element name="Variant" type="_T_Variant"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_FlavorOptionElement">
    <xs:choice>
      <xs:element name="Option" type="_T_FlavorOption"/>
    </xs:choice>
  </xs:group>

  <xs:group name="_G_VariantOptionElement">
    <xs:choice>
      <xs:element name="Option" type="_T_VariantOption"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_CommandList">
    <xs:sequence>
      <xs:group ref="_G_DefaultElements" minOccurs="0" maxOccurs="1"/>
      <xs:group ref="_G_BuildCustomizationElements" minOccurs="0" maxOccurs="1"/>
      <xs:group ref="_G_UsesFeatureElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ImportTemplate" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_FindPackageElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ExternalDependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DefineElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_PlatformElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>

  <xs:group name="_G_PlatformCommandList">
    <xs:sequence>
      <xs:group ref="_G_UsesFeatureElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_FindPackageElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ExternalDependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DefineElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_FlavorElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_VariantElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>

  <xs:group name="_G_FlavorCommandList">
    <xs:sequence>
      <xs:group ref="_G_FlavorOptionElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>

  <xs:group name="_G_VariantCommandList">
    <xs:sequence>
      <xs:group ref="_G_VariantOptionElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>

  <xs:group name="_G_FlavorOptionCommandList">
    <xs:sequence>
      <xs:group ref="_G_UsesFeatureElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_FindPackageElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ExternalDependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DefineElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>

  <xs:group name="_G_VariantOptionCommandList">
    <xs:sequence>
      <xs:group ref="_G_FindPackageElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ExternalDependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DefineElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>

  <xs:complexType name="_T_Executable">
    <xs:annotation>
      <xs:documentation>Build a executable</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_CommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="NoInclude" type="_TP_Bool" use="optional"/>
    <xs:attribute name="Company" type="xs:string" use="optional"/>
    <xs:attribute name="CreationYear" type="xs:integer" use="optional"/>
    <xs:attribute name="TemplateType" type="xs:string" use="optional"/>
    <xs:attribute name="OverrideInclude" type="xs:string" use="optional"/>
    <xs:attribute name="OverrideSource" type="xs:string" use="optional"/>
    <xs:attribute name="AllowCombinedDirectory" type="_TP_Bool" use="optional"/>
    <xs:attribute name="AllowCheck" type="_TP_Bool" use="optional"/>
    <xs:attribute name="PackageNameBasedIncludePath" type="_TP_Bool" use="optional"/>
    <xs:attribute name="UnitTest" type="_TP_Bool" use="optional"/>
    <xs:attribute name="ShowInMainReadme" type="_TP_Bool" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_Library">
    <xs:annotation>
      <xs:documentation>Build a static library</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_CommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Company" type="xs:string" use="optional"/>
    <xs:attribute name="CreationYear" type="xs:integer" use="optional"/>
    <xs:attribute name="TemplateType" type="xs:string" use="optional"/>
    <xs:attribute name="OverrideInclude" type="xs:string" use="optional"/>
    <xs:attribute name="OverrideSource" type="xs:string" use="optional"/>
    <xs:attribute name="AllowCombinedDirectory" type="_TP_Bool" use="optional"/>
    <xs:attribute name="AllowCheck" type="_TP_Bool" use="optional"/>
    <xs:attribute name="PackageNameBasedIncludePath" type="_TP_Bool" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_ExternalLibrary">
    <xs:annotation>
      <xs:documentation>A description of a external library</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_ExternalCommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Company" type="xs:string" use="optional"/>
    <xs:attribute name="CreationYear" type="xs:integer" use="optional"/>
    <xs:attribute name="TemplateType" type="xs:string" use="optional"/>
    <xs:attribute name="AllowCheck" type="_TP_Bool" use="optional"/>
  </xs:complexType>


  <xs:complexType name="_T_HeaderLibrary">
    <xs:annotation>
      <xs:documentation>Build a header only library</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_CommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Company" type="xs:string" use="optional"/>
    <xs:attribute name="CreationYear" type="xs:integer" use="optional"/>
    <xs:attribute name="TemplateType" type="xs:string" use="optional"/>
    <xs:attribute name="OverrideInclude" type="xs:string" use="optional"/>
    <xs:attribute name="OverrideSource" type="xs:string" use="optional"/>
    <xs:attribute name="AllowCombinedDirectory" type="_TP_Bool" use="optional"/>
    <xs:attribute name="AllowCheck" type="_TP_Bool" use="optional"/>
    <xs:attribute name="PackageNameBasedIncludePath" type="_TP_Bool" use="optional"/>
  </xs:complexType>


  <!--                                       -->
  <!-- New experimental recipe support begin -->
  <!--                                       -->

  <xs:simpleType name="_TP_CMakeTarget">
    <xs:restriction base="xs:string">
      <xs:enumeration value="project" />
      <xs:enumeration value="install" />
    </xs:restriction>
  </xs:simpleType>


  <xs:complexType name="_T_PipelineJoinCommandUnpack">
    <xs:group ref="_G_PipelineJoinCommandList"/>
    <xs:attribute name="File" type="xs:string" use="required"/>
  </xs:complexType>


  <xs:complexType name="_T_PipelineJoinCommandCopy">
    <xs:attribute name="From" type="xs:string" use="required"/>
    <xs:attribute name="To" type="xs:string" use="required"/>
    <xs:attribute name="Overwrite" type="_TP_Bool" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_PipelineJoinCommandDelete">
    <xs:attribute name="Path" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="_T_PipelineCommandUnpack">
    <xs:attribute name="File" type="xs:string" use="required"/>
    <xs:attribute name="OutputPath" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_PipelineJoinCommandGitApply">
    <xs:attribute name="From" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="_T_PipelineFetchCommandDownload">
    <xs:attribute name="URL" type="xs:string" use="required"/>
    <xs:attribute name="To" type="xs:string" use="optional"/>
    <xs:attribute name="Hash" type="xs:string" use="optional"/>
    <xs:attribute name="OutputPath" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_PipelineFetchCommandGitClone">
    <xs:attribute name="URL" type="xs:string" use="required"/>
    <xs:attribute name="Tag" type="xs:string" use="optional"/>
    <xs:attribute name="Hash" type="xs:string" use="optional"/>
  </xs:complexType>


  <xs:complexType name="_T_PipelineCommandCMakeBuild">
    <xs:group ref="_G_PipelineJoinCommandList"/>
    <xs:attribute name="Source" type="xs:string" use="optional"/>
    <xs:attribute name="Project" type="xs:string" use="required"/>
    <xs:attribute name="Target" type="_TP_CMakeTarget" use="required"/>
    <xs:attribute name="Configuration" type="xs:string" use="required"/>
    <xs:attribute name="Options" type="xs:string" use="optional"/>
    <xs:attribute name="OutputPath" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="_T_PipelineCommandCombine">
    <xs:group ref="_G_PipelineCommandCombineCommandList"/>
    <xs:attribute name="OutputPath" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_PipelineCommandCopy">
    <xs:group ref="_G_PipelineJoinCommandList"/>
    <xs:attribute name="OutputPath" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:group name="_G_PipelineJoinCommands">
    <xs:choice>
      <xs:element name="Unpack" type="_T_PipelineJoinCommandUnpack"/>
      <xs:element name="Copy" type="_T_PipelineJoinCommandCopy"/>
      <xs:element name="Delete" type="_T_PipelineJoinCommandDelete"/>
      <xs:element name="GitApply" type="_T_PipelineJoinCommandGitApply"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_PipelineJoinCommandList">
    <xs:sequence>
      <xs:group ref="_G_PipelineJoinCommands" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>


  <xs:group name="_G_PipelineCommandCombineCommands">
    <xs:choice>
      <xs:element name="CMakeBuild" type="_T_PipelineCommandCMakeBuild"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_PipelineCommandCombineCommandList">
    <xs:sequence>
      <xs:group ref="_G_PipelineCommandCombineCommands" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>


  <xs:group name="_G_PipelineFetchCommandElement">
    <xs:choice>
      <xs:element name="Download" type="_T_PipelineFetchCommandDownload"/>
      <xs:element name="GitClone" type="_T_PipelineFetchCommandGitClone"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_PipelineCommandElement">
    <xs:choice>
      <xs:element name="Unpack" type="_T_PipelineCommandUnpack"/>
      <xs:element name="CMakeBuild" type="_T_PipelineCommandCMakeBuild"/>
      <xs:element name="Combine" type="_T_PipelineCommandCombine"/>
      <xs:element name="Copy" type="_T_PipelineCommandCopy"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_PipelineCommandList">
    <xs:sequence>
      <xs:group ref="_G_PipelineFetchCommandElement" minOccurs="1" maxOccurs="1"/>
      <xs:group ref="_G_PipelineCommandElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>


  <xs:complexType name="_T_PipelineElement">
    <xs:annotation>
      <xs:documentation>A pipeline element</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_PipelineCommandList"/>
  </xs:complexType>


  <xs:group name="_G_PipelineElement">
    <xs:choice>
      <xs:element name="Pipeline" type="_T_PipelineElement"/>
    </xs:choice>
  </xs:group>


  <xs:simpleType name="_TP_ValidateMethod">
    <xs:restriction base="xs:string">
      <xs:enumeration value="IsDirectory" />
      <xs:enumeration value="IsFile" />
      <xs:enumeration value="Exists" />
    </xs:restriction>
  </xs:simpleType>


  <xs:complexType name="_T_ValidateCommandEnvironmentVariable">
    <xs:annotation>
      <xs:documentation>Check a environment variable</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Method" type="_TP_ValidateMethod" use="required"/>
    <xs:attribute name="AllowEndSlash" type="_TP_Bool" use="optional"/>
    <xs:attribute name="Help" type="xs:string" use="optional"/>
  </xs:complexType>


  <xs:complexType name="_T_ValidateCommandPath">
    <xs:annotation>
      <xs:documentation>Check a path in the filesystem</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Method" type="_TP_ValidateMethod" use="required"/>
    <xs:attribute name="Help" type="xs:string" use="optional"/>
  </xs:complexType>


  <xs:complexType name="_T_ValidateCommandFindFileInPath">
    <xs:annotation>
      <xs:documentation>Check if a file can be found in the path</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="ExpectedPath" type="xs:string" use="optional"/>
    <xs:attribute name="Help" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_ValidateCommandFindExecutableFileInPath">
    <xs:annotation>
      <xs:documentation>Check if a executable file can be found in the path. The executable name will be stripped of any extension and the platform default executable extension will be added</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Alternatives" type="xs:string" use="required"/>
	<xs:attribute name="MinVersion" type="xs:string" use="optional"/>
	<xs:attribute name="VersionCommand" type="xs:string" use="optional"/>
	<xs:attribute name="VersionRegEx" type="xs:string" use="optional"/>
    <xs:attribute name="ExpectedPath" type="xs:string" use="optional"/>
    <xs:attribute name="Help" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_ValidateCommandAddHeaders">
    <xs:annotation>
      <xs:documentation>Automatically ensures the headers is added as a external dependency and checks if the directory exist.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Help" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_ValidateCommandAddLib">
    <xs:annotation>
      <xs:documentation>Automatically ensures the static lib is added as a external dependency and checks if the file(s) exist.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="DebugName" type="xs:string" use="optional"/>
    <xs:attribute name="Help" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_ValidateCommandAddDLL">
    <xs:annotation>
      <xs:documentation>Automatically ensures the DLL is added as a external dependency and checks if the file(s) exist.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="DebugName" type="xs:string" use="optional"/>
    <xs:attribute name="Help" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="_T_ValidateCommandAddTool">
    <xs:annotation>
      <xs:documentation>Automatically ensures the tool is added as a tool available to the FslBuild toolchain.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Help" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:group name="_G_ValidateCommand">
    <xs:choice>
      <xs:element name="EnvironmentVariable" type="_T_ValidateCommandEnvironmentVariable"/>
      <xs:element name="Path" type="_T_ValidateCommandPath"/>
      <xs:element name="FindFileInPath" type="_T_ValidateCommandFindFileInPath"/>
      <xs:element name="FindExecutableFileInPath" type="_T_ValidateCommandFindExecutableFileInPath"/>
      <xs:element name="AddHeaders" type="_T_ValidateCommandAddHeaders"/>
      <xs:element name="AddLib" type="_T_ValidateCommandAddLib"/>
      <xs:element name="AddDLL" type="_T_ValidateCommandAddDLL"/>
      <xs:element name="AddTool" type="_T_ValidateCommandAddTool"/>
    </xs:choice>
  </xs:group>

  <xs:group name="_G_ValidateCommandList">
    <xs:sequence>
      <xs:group ref="_G_ValidateCommand" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>


  <xs:complexType name="_T_InstallationElement">
    <xs:annotation>
      <xs:documentation>Validates if the package has been installed correctly</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_ValidateCommandList"/>
  </xs:complexType>


  <xs:group name="_G_Installation">
    <xs:choice>
      <xs:element name="Installation" type="_T_InstallationElement"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_ExperimentalRecipeCommandList">
    <xs:sequence>
      <xs:group ref="_G_PipelineElement" minOccurs="0" maxOccurs="1"/>
      <xs:group ref="_G_Installation" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>


  <xs:complexType name="_T_ExperimentalRecipeElement">
    <xs:annotation>
      <xs:documentation>A experimental recipe element that describes how to build / validate an external dependency</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_ExperimentalRecipeCommandList"/>
    <xs:attribute name="Name" type="xs:string" use="optional"/>
    <xs:attribute name="Version" type="xs:string" use="optional"/>
    <xs:attribute name="Find" type="_TP_Bool" use="optional"/>
    <xs:attribute name="FindVersion" type="xs:string" use="optional"/>
    <xs:attribute name="FindTargetName" type="xs:string" use="optional"/>
    <xs:attribute name="ExternalInstallDirectory" type="xs:string" use="optional"/>
  </xs:complexType>


  <xs:group name="_G_ExperimentalRecipeElement">
    <xs:choice>
      <xs:element name="ExperimentalRecipe" type="_T_ExperimentalRecipeElement"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_PlatformExternalCommandList">
    <xs:sequence>
      <xs:group ref="_G_UsesFeatureElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ExternalDependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DefineElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_FlavorElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_VariantElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ExperimentalRecipeElement" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:group>


  <xs:complexType name="_T_PlatformExternal">
    <xs:annotation>
      <xs:documentation>Platform specific configuration</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_PlatformExternalCommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="ProjectId" type="xs:string" use="optional"/>
    <xs:attribute name="Supported" type="_TP_Bool" use="optional"/>
  </xs:complexType>


  <xs:group name="_G_PlatformExternalElement">
    <xs:choice>
      <xs:element name="Platform" type="_T_PlatformExternal"/>
    </xs:choice>
  </xs:group>


  <xs:group name="_G_ToolRecipeCommandList">
    <xs:sequence>
      <xs:group ref="_G_DefaultElements" minOccurs="0" maxOccurs="1"/>
      <xs:group ref="_G_UsesFeatureElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DefineElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_PlatformExternalElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>


  <xs:group name="_G_ExternalCommandList">
    <xs:sequence>
      <xs:group ref="_G_DefaultElements" minOccurs="0" maxOccurs="1"/>
      <xs:group ref="_G_UsesFeatureElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ImportTemplate" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ExternalDependencyElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_DefineElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="_G_ExperimentalRecipeElement" minOccurs="0" maxOccurs="1"/>
      <xs:group ref="_G_PlatformExternalElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:group>


  <xs:complexType name="_T_ToolRecipe">
    <xs:annotation>
      <xs:documentation>Describes how to build or check if a external tool exist</xs:documentation>
    </xs:annotation>
    <xs:group ref="_G_ToolRecipeCommandList"/>
    <xs:attribute name="Name" type="xs:string" use="required"/>
    <xs:attribute name="Company" type="xs:string" use="optional"/>
    <xs:attribute name="CreationYear" type="xs:integer" use="optional"/>
  </xs:complexType>


  <!--                                       -->
  <!-- New experimental recipe support end   -->
  <!--                                       -->


  <xs:group name="_G_BuildElement">
    <xs:choice>
      <xs:element name="Executable" type="_T_Executable"/>
      <xs:element name="Library" type="_T_Library"/>
      <xs:element name="ExternalLibrary" type="_T_ExternalLibrary"/>
      <xs:element name="HeaderLibrary" type="_T_HeaderLibrary"/>
      <xs:element name="ToolRecipe" type="_T_ToolRecipe"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="_T_FslBuildGen">
    <xs:group ref="_G_BuildElement"/>
  </xs:complexType>

  <xs:element name="FslBuildGen" type="_T_FslBuildGen"/>
</xs:schema>
